akka {

    persistence {
        state {
              plugin = "jdbc-durable-state-store"
        }
        journal {
              plugin = "jdbc-journal"
              auto-start-journals = ["jdbc-journal"]
            }
            snapshot-store {
              plugin = "jdbc-snapshot-store"
              auto-start-snapshot-stores = ["jdbc-snapshot-store"]
            }
    }
#    actor {
#        provider = "cluster"
#    }
#    remote.artery {
#        canonical {
#            hostname = "127.0.0.1"
#            port = ${PORT} #must have 2551 port in cluster
#        }
#    }
#    management {
#        http {
#            hostname = "127.0.0.1"
#            port = ${MPORT}
#        }
#    }
#    cluster {
#        seed-nodes = [
#          "akka://cluster@127.0.0.1:2551",
#          "akka://cluster@127.0.0.1:2552",
#          "akka://cluster@127.0.0.1:2553"
#          ]
#        roles = [${ROLE}]
#        role.worker.min-nr-of-members = 2 #need to have atleast 2 worker node
#
#        downing-provider-class = "akka.cluster.sbr.SplitBrainResolverProvider"
#
#        sharding {
#            passivation.default-idle-strategy.idle-entity.timeout = "15s"
#            least-shard-allocation-strategy.rebalance-absolute-limit = 20
#        }
#    }
#}

akka-persistence-jdbc {
  shared-databases {
    slick {
      profile = "slick.jdbc.MySQLProfile$"
      db {
        url = "jdbc:mysql://localhost:3306/test"
        user = "root"
        password = "Minh0123"
        driver = "com.mysql.cj.jdbc.Driver"
        numThreads = 5
        maxConnections = 5
        minConnections = 5
      }
    }
  }
}

jdbc-durable-state-store {
  use-shared-db = "slick"
}

jdbc-journal {
  use-shared-db = "slick"
}

jdbc-snapshot-store {
  use-shared-db = "slick"
}

service {
    director {
        tick = 10
        wait-timeout = 3
    }
}